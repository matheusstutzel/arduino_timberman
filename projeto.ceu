#include "arduino/arduino.ceu"

#define MAX_TIME 100
#define TREE_SIZE 10
#define trataBT(PIN,value) \
loop do \
			var int on = await PIN until on==LOW;\
			await 20ms;\
			var int on = await PIN until on==HIGH;\
			await 20ms;\
			{position = @value;\
			calc_score();\
			time_inc();\
			move_tree();\
			Serial.print("apertou\n\n");\
			if(update()!=0){\
				finalR=value;\
				break;\
			}}\
		end
input int PIN_02;
input int PIN_03;

native/pre do

void draw();
	int tree[TREE_SIZE]; 
	int tree_position;
	unsigned long m_time;
	int level;
	int position;
	int score;
	int finalR;
	void clear_tree(){
		int i;
		for(i=0;i<TREE_SIZE;i++)tree[i]=0;
	}
	void start(){
		m_time=MAX_TIME;
		level = 1;
		position = -1;
		tree_position=0;
		score = 0;
		clear_tree();			
	}
	int collision(){
		return position==tree[tree_position];
	}
	int new_branch(){
		int a;
		int prev = (tree_position+TREE_SIZE-1)%TREE_SIZE;/*anterior*/
		if(prev==0) a = random(-3,4); 
		else if(prev==-1)a = random(-3,1); 
		else if(prev==1)a = random(0,4); 


		if(a<0)return -1;
		else if(a>0)return 1;
		else return 0;
	}
	void time_dec(){
		if(m_time<=level)m_time=0;
		else m_time-= (level);
	}
	void time_inc(){
		m_time+=level;
	}
	void move_tree(){
		tree[tree_position] = new_branch();
		tree_position= (tree_position+1)%TREE_SIZE;
	}
	void calc_score(){
		score++;
	}
	int update(){
		Serial.print("update\n");
		if(collision())return -1;
		time_dec();
		if(m_time==0)return -1;
		draw();
		return 0;		
	}

	void draw_score(){		
		Serial.print("\nscore: ");
		Serial.print(score);
		Serial.print("\n");
	}
void draw_time(){
		Serial.print("\ntime: ");
		Serial.print(m_time);
		Serial.print("\n");
}
void draw_full_tree(){
	Serial.print("\n");
		for(int i=TREE_SIZE-1;i>=0;i--){
			Serial.print(" ");
			Serial.print(tree[(tree_position+i)%TREE_SIZE]);
			Serial.print("\n");
		}
}
void draw_p(){
	
		if(position==-1)Serial.println("A  ");
		if(position==1)Serial.println("  A");
		Serial.println("\n\n");
}
	void draw(){
	  draw_score();
	  draw_time();
	  draw_full_tree();
	  draw_p();

	}

	void draw_game_over(int i){
		Serial.print("end\n\n");
	  draw_score();
	  draw_time();
	  draw_full_tree();
		if(i)draw_p();
	}

end 
{
	Serial.begin(9600);
	randomSeed(analogRead(0));  
}
loop do
	{Serial.print("Press2 to start\n");}
	var int on = await PIN_02 until on==LOW;	
	{start();}
	par/or do
        loop do
			{if(update()!=0){Serial.print("collision\n\n");break;}}
			await 1s;
		end
	with
		trataBT(PIN_02,-1);
	with
		trataBT(PIN_03,1);
	end
	
	{Serial.print("Acabou!!");}
	par/or do
		loop do 
			{draw_game_over(0);}
			await 10s;
			{draw_game_over(1);}	
			await 10s;
		end
	with
		var int on = await PIN_02 until on==LOW;	
	end
end
		
